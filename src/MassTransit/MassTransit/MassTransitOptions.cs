using System;
using GreenPipes;
using MassTransit;
using Nybus.Configuration;
using Nybus.Configuration.QueueNameStrategies;
using Nybus.Configuration.ServiceBusFactories;
using Nybus.Configuration.ServiceBusFactories.Loopback;
using Nybus.Logging;

namespace Nybus.MassTransit
{
    public class MassTransitOptions
    {
        public IQueueNameStrategy CommandQueueNameStrategy { get; set; } = new AutoGeneratedNameQueueNameStrategy();

        public IRetryPolicy CommandErrorPolicy { get; set; } = Retry.Immediate(5);

        public IQueueNameStrategy EventQueueNameStrategy { get; set; } = new AutoGeneratedNameQueueNameStrategy();

        public IRetryPolicy EventErrorPolicy { get; set; } = Retry.Immediate(5);

        public IServiceBusFactory ServiceBusFactory { get; set; } = new LoopbackServiceBusFactory();

        public IContextManager ContextManager { get; set; } = new RabbitMqContextManager();

        public ILoggerFactory LoggerFactory { get; set; } = Nybus.Logging.LoggerFactory.Default;

        public int ConcurrencyLimit { get; set; } = Environment.ProcessorCount;
    }
}